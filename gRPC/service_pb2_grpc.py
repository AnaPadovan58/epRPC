# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import service_pb2 as service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TestServiceStub(object):
    """Serviço
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NoArgsNoReturn = channel.unary_unary(
                '/service.TestService/NoArgsNoReturn',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.OneLong = channel.unary_unary(
                '/service.TestService/OneLong',
                request_serializer=service__pb2.LongRequest.SerializeToString,
                response_deserializer=service__pb2.LongResponse.FromString,
                _registered_method=True)
        self.EightLongs = channel.unary_unary(
                '/service.TestService/EightLongs',
                request_serializer=service__pb2.EightLongsRequest.SerializeToString,
                response_deserializer=service__pb2.LongResponse.FromString,
                _registered_method=True)
        self.OneString = channel.unary_unary(
                '/service.TestService/OneString',
                request_serializer=service__pb2.StringRequest.SerializeToString,
                response_deserializer=service__pb2.StringResponse.FromString,
                _registered_method=True)
        self.ComplexOperation = channel.unary_unary(
                '/service.TestService/ComplexOperation',
                request_serializer=service__pb2.ComplexRequest.SerializeToString,
                response_deserializer=service__pb2.ComplexResponse.FromString,
                _registered_method=True)


class TestServiceServicer(object):
    """Serviço
    """

    def NoArgsNoReturn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OneLong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EightLongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OneString(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComplexOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NoArgsNoReturn': grpc.unary_unary_rpc_method_handler(
                    servicer.NoArgsNoReturn,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'OneLong': grpc.unary_unary_rpc_method_handler(
                    servicer.OneLong,
                    request_deserializer=service__pb2.LongRequest.FromString,
                    response_serializer=service__pb2.LongResponse.SerializeToString,
            ),
            'EightLongs': grpc.unary_unary_rpc_method_handler(
                    servicer.EightLongs,
                    request_deserializer=service__pb2.EightLongsRequest.FromString,
                    response_serializer=service__pb2.LongResponse.SerializeToString,
            ),
            'OneString': grpc.unary_unary_rpc_method_handler(
                    servicer.OneString,
                    request_deserializer=service__pb2.StringRequest.FromString,
                    response_serializer=service__pb2.StringResponse.SerializeToString,
            ),
            'ComplexOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.ComplexOperation,
                    request_deserializer=service__pb2.ComplexRequest.FromString,
                    response_serializer=service__pb2.ComplexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service.TestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('service.TestService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TestService(object):
    """Serviço
    """

    @staticmethod
    def NoArgsNoReturn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.TestService/NoArgsNoReturn',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OneLong(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.TestService/OneLong',
            service__pb2.LongRequest.SerializeToString,
            service__pb2.LongResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EightLongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.TestService/EightLongs',
            service__pb2.EightLongsRequest.SerializeToString,
            service__pb2.LongResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OneString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.TestService/OneString',
            service__pb2.StringRequest.SerializeToString,
            service__pb2.StringResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ComplexOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.TestService/ComplexOperation',
            service__pb2.ComplexRequest.SerializeToString,
            service__pb2.ComplexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
